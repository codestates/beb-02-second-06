import React, { useState } from 'react'
import { useDispatch } from 'react-redux';

import Avatar from '@mui/material/Avatar';
import Button from '@mui/material/Button';
import CssBaseline from '@mui/material/CssBaseline';
import TextField from '@mui/material/TextField';
import FormControlLabel from '@mui/material/FormControlLabel';
import Checkbox from '@mui/material/Checkbox';
import Link from '@mui/material/Link';
import Grid from '@mui/material/Grid';
import Box from '@mui/material/Box';
import LockOutlinedIcon from '@mui/icons-material/LockOutlined';
import Typography from '@mui/material/Typography';
import Container from '@mui/material/Container';
import { createTheme, ThemeProvider } from '@mui/material/styles';

function Copyright(props) {
  return (
    <Typography variant="body2" color="text.secondary" align="center" {...props}>
      {'Copyright © '}
      <Link color="inherit" href="https://mui.com/">
        Your Website
      </Link>{' '}
      {new Date().getFullYear()}
      {'.'}
    </Typography>
  );
}

const theme = createTheme();

export default function SignUp() {
  const dispatch = useDispatch();

  const [name, setName] = useState("");
  const [password, setPassword] = useState("");
  const [confirmPassword, setConfirmPassword] = useState("");
  const [address, setAddress] = useState("");
  const [privateKey, setPrivateKey] = useState("");
  const [error, setError] = useState(false);
  const [success, setSuccess] = useState(false);


  // ------- 지갑 생성
  const Web3 = require('web3');
  var web3 = new Web3(new Web3.providers.HttpProvider())
  var account = web3.eth.accounts.create();
  console.log('account: ', account);
  console.log('-----------------------------------');
  console.log('account.address: ', account.address);
  console.log('account.privKey: ', account.privateKey);


  // -----

  // const handleSubmit = (event) => {
  //   event.preventDefault();
  //   const data = new FormData(event.currentTarget);
  //   // eslint-disable-next-line no-console
  //   console.log({
  //     email: data.get('email'),
  //     password: data.get('password'),
  //   });
  // };

  const onSubmitHandler = (event) => {
    event.preventDefault();

    if (password !== confirmPassword) {
        setError(true);
    }

    let body = {
      name: name,
      password: password,
      address: address,
      privateKey: privateKey
    }
    console.log(body);
    // dispatch(registerUser(body))
    //     .then(response => {
    //         if (response.payload.success) {
    //             setSuccess(true);
    //         }
    //         else {
    //             setError(true);
    //         }
    //     })
}

  return (
    <ThemeProvider theme={theme}>
      <Container component="main" maxWidth="xs">
        <CssBaseline />
        <Box
          sx={{
            marginTop: 8,
            display: "flex",
            flexDirection: "column",
            alignItems: "center",
          }}
        >
          <Avatar sx={{ m: 1, bgcolor: "secondary.main" }}>
            <LockOutlinedIcon />
          </Avatar>
          <Typography component="h1" variant="h5">
            Sign up
          </Typography>
          <Box
            component="form"
            noValidate
            // onSubmit={handleSubmit}
            sx={{ mt: 3 }}
            onSubmit={onSubmitHandler}
          >
            <Grid container spacing={2}>
              <Grid
                item
                xs={12}
                //   sm={6}
              >
                <TextField
                  autoComplete="given-name"
                  name="userName"
                  required
                  fullWidth
                  id="userName"
                  label="userName"
                  autoFocus
                  onChange={(event) => {
                    setName(event.target.value);
                  }}
                />
              </Grid>
              <Grid item xs={12}>
                <TextField
                  required
                  fullWidth
                  name="password"
                  label="Password"
                  type="password"
                  id="password"
                  autoComplete="new-password"
                  onChange={(event) => {
                    setPassword(event.target.value);
                  }}
                />
              </Grid>

              <Grid item xs={12}>
                <TextField
                  required
                  fullWidth
                  name="confirm_password"
                  label="confirm_password"
                  type="password"
                  id="corfirm_password"
                  autoComplete="current_password"
                  onChange={(event) => {
                    setConfirmPassword(event.target.value);
                  }}
                />
              </Grid>

              <Grid item xs={12}>
                <Typography component="h1" variant="h6">
                  Address
                </Typography>
                <TextField
                  required
                  fullWidth
                  id="Address"
                  label={account.address}
                  name="Address"
                  onChange={(event) => {
                    setAddress(event.target.value);
                  }}
                />
              </Grid>
              <Grid item xs={12}>
                <Typography component="h1" variant="h6">
                  PrivateKey
                </Typography>
                <TextField
                  required
                  fullWidth
                  id="privateKey"
                  label={account.privateKey}
                  name="privateKey"
                  onChange={(event) => {
                    setPrivateKey(event.target.value);
                  }}
                />
              </Grid>
              {/* <Grid item xs={12}>
                <FormControlLabel
                  control={<Checkbox value="allowExtraEmails" color="primary" />}
                  label="I want to receive inspiration, marketing promotions and updates via email."
                />
              </Grid> */}
            </Grid>
            <Button
              type="submit"
              fullWidth
              variant="contained"
              sx={{ mt: 3, mb: 2 }}
            >
              Sign Up
            </Button>

            <Grid container justifyContent="flex-end">
              <Grid item>
                <Link href="#" variant="body2">
                  Already have an account? Sign in
                </Link>
              </Grid>
            </Grid>
          </Box>
        </Box>
        {/* <Copyright sx={{ mt: 5 }} /> */}
      </Container>
    </ThemeProvider>
  );
}